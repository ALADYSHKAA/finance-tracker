/// media break point
/// @param {Size} $min [1200px] - width
/// @param {Size} $max [1800px] - width

@mixin breakPoint($min, $max: null) {
  @if ($max) {
    @media (min-width: #{$min}) and (max-width: #{$max - 1px}) {
      @content;
    }
  } @else {
    @media (min-width: #{$min}) {
      @content;
    }
  }
}

/// Grid site
/// @param {Number} $columns [12] - column lines count
/// @param {Size} $gutter [1%] - gutter width
/// @param {Size} $offset [0] - side offset
/// @param {Color} $color [rgba(45, 132, 190, 0.2)] - lines color

///	body {
///		&:before{
///			content: '';
///			@include grid();
///		}
///	}

@mixin grid($columns: 12, $gutter: 1%, $offset: 0, $color: rgba(45, 132, 190, 0.03)) {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
  width: calc(100% - (2 * #{$offset}));
  height: 100vh;
  content: '';
  background-image: repeating-linear-gradient(
                  to right,
                  $color,
                  $color calc((100% / #{$columns}) - #{$gutter}),
                  transparent calc((100% / #{$columns}) - #{$gutter}),
                  transparent calc(100% / #{$columns})
  );
  background-size: calc(100% + #{$gutter}) 100%;
  z-index: 1000;
  pointer-events: none;
}

$sizes: 1 4px, 2 8px, 3 12px, 4 16px, 5 20px, 6 24px, 7 28px, 8 32px, 9 36px, 10 40px, 11 44px, 12 48px, 13 52px, 14 56px, 15 60px, 16 64px;

@mixin collection($className, $parameterName) {
  @each $point, $size in $sizes {
    .#{$className}-#{$point} {
      #{$parameterName}: $size;
    }
  }
}
